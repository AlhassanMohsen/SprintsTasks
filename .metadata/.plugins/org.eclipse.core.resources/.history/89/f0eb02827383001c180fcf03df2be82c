/*
 * ATM.c
 *
 *  Created on: Jan 28, 2022
 *      Author: Alhassan Mohsen
 */

#include "ATM_prv.h"
#include "ATM.h"


static volatile ATMModes_t gu8_ATMMode= ATM_START;
static volatile uint8_t LastAccountPtr;
static volatile uint8_t gu8_MaxAmount;
static CardElement_t gst_UserCard;


//static volatile uint8_t gu8_ATMPollingReadFlag = 0;

void ATM_Init(void)
{
	DIO_u8SetPinDirection(PORTB, PIN4, DIO_OUTPUT);
	DIO_u8SetPinDirection(PORTB, PIN5, DIO_OUTPUT);
	DIO_u8SetPinDirection(PORTB, PIN6, DIO_INPUT);
	DIO_u8SetPinDirection(PORTB, PIN7, DIO_OUTPUT);

	DIO_u8SetPinData(PORTB, PIN2, DIO_LOW);
	SPI_u8Init(SPI_SLAVE);
	TIMER0_u8PollingDelay(10);
	UART_u8Init(9600);
	UART_u8EnableRecievingInterrupt(ATM_UpdateMode);
	EEPROM_Init();
	LCD_u8Init();
	KEYPAD_u8Init();


	EEPROM_u8RandonReadFrom(ATM_EEPROM_ADDRESS,ATM_EEPROM_FIRST_TIME_ADDRESS,&LastAccountPtr);
	TIMER0_u8PollingDelay(10);
	if (LastAccountPtr!=ATM_EEPROM_FIRST_TIME_DATA)
	{
		EEPROM_u8WriteByteTo(ATM_EEPROM_ADDRESS,ATM_EEPROM_FIRST_TIME_ADDRESS,ATM_EEPROM_FIRST_TIME_DATA);
		TIMER0_u8PollingDelay(10);
		EEPROM_u8WriteByteTo(ATM_EEPROM_ADDRESS,ATM_EEPROM_PTR,ATM_DATA_START_ADDRESS);
		TIMER0_u8PollingDelay(10);
	}else{

		EEPROM_u8RandonReadFrom(ATM_EEPROM_ADDRESS,ATM_EEPROM_PTR,&LastAccountPtr);
		TIMER0_u8PollingDelay(10);
	}
	EEPROM_u8WriteStringTo(ATM_EEPROM_ADDRESS,ATM_PASSWORD_LOCATION,ATM_ADMIN_PASSWORD);
	TIMER0_u8PollingDelay(10);
	DIO_u8SetPinDirection(PORTB, PIN2, DIO_OUTPUT);


}

void ATM_APP(void)
{
	uint8_t u8PasswordCheck;
	uint8_t u8UserInput;
	while (1)
	{
		switch (gu8_ATMMode)
		{
		case ATM_START:
			break;
		case ATM_PROGRAMMING_MODE:
			UART_u8DisableReceivingInterrupt();
			ATM_CheckPassword(&u8PasswordCheck);
			if (u8PasswordCheck==ATM_PASSWORD_OK)
			{

				do{
					UART_u8SendString("\r\n 1- Add Customer Data \n");
					UART_u8SendString("\r\n 2- Edit the Max Amount \n");
					UART_u8SendString("\r\n 3- Exit \r\n");
					UART_u8ReceiveByte(&u8UserInput);
					if (u8UserInput=='1')
					{
						ATM_AddNewAccount();

					}else if (u8UserInput=='2')
					{
						ATM_AddMaxAmount();
					}else if (u8UserInput=='3')
					{
						UART_u8SendString("\r\n Thank You!! \r\n");
					}
					else
					{
						UART_u8SendString("\r\n Wrong Input \r\n");
					}
				}while ((u8UserInput!='3'));

			}else if (u8PasswordCheck==ATM_PASSWORD_NOK){
				UART_u8SendString("\r\n Wrong Password \r\n");}

			gu8_ATMMode=ATM_START;
			UART_u8EnableRecievingInterrupt(ATM_UpdateMode);

			break;
		case ATM_OPERATION_MODE:
			UART_u8DisableReceivingInterrupt();
			LCD_u8SendString("1- Insert Card");
			LCD_u8SetCursor(1,0);
			LCD_u8SendString("2- Get Temp");
			UART_u8SendString("\r\nOPERATION \r\n");
			ATM_GetCardData();
			do{
				KEYPAD_u8GetPressedKey(&u8UserInput);
			}while(u8UserInput==KEYPAD_NO_PRESSED_KEY);

			break;
		case ATM_WRONG_MODE_INPUT:
			break;
		default:
			UART_u8SendString("Wrong Entry \r\n");

		}

	}
}


void ATM_GetCardData()
{
	uint8_t ;
	DIO_u8SetPinData(PORTB, PIN2, DIO_HIGH);
	SPI_u8ReceiveString(&gst_UserCard.PAN);
	UART_u8SendString(gst_UserCard.PAN);
	DIO_u8SetPinData(PORTB, PIN2, DIO_LOW);

}

void ATM_UpdateMode(void)
{

		uint8_t au8TerminalCommand[10];
		UART_u8RecieveString(au8TerminalCommand);
		switch (au8TerminalCommand[0])
		{
		case 'A':
			gu8_ATMMode = ATM_PROGRAMMING_MODE;
			break;
		case 'U':
			gu8_ATMMode = ATM_OPERATION_MODE;
			break;
		default:
			gu8_ATMMode =ATM_WRONG_MODE_INPUT;
		}

}

void ATM_CheckPassword(uint8_t* pu8CheckResult)
{
	uint8_t au8UserPassword[4];
	uint8_t u8PasswordReading;
	uint8_t RightPasswordCounter=0;

	UART_u8SendString("Please Enter ADMIN Password: \r\n");
	for (uint8_t i=0;i<4;i++)
	{
		//gu8_ATMPollingReadFlag=1;
		UART_u8ReceiveByte(&au8UserPassword[i]);
		EEPROM_u8RandonReadFrom(ATM_EEPROM_ADDRESS,(ATM_PASSWORD_LOCATION+i),&u8PasswordReading);
		if (au8UserPassword[i]==u8PasswordReading)
		{
			RightPasswordCounter++;
		}else {
			//NOP
		}
	}
	if (RightPasswordCounter==4)
	{
		*pu8CheckResult=ATM_PASSWORD_OK;
	}else
	{
		*pu8CheckResult=ATM_PASSWORD_NOK;
	}
//	gu8_ATMPollingReadFlag=0;

}

void ATM_AddNewAccount()
{
	uint32_t u8customerData;
	uint8_t u8UserInput='y';
	while (u8UserInput!='n')
	{


		UART_u8SendString("\r\n Please Enter the PAN: \r\n");
		UART_u8ReceiveInt(&u8customerData);
		EEPROM_u8WriteIntTo(ATM_EEPROM_ADDRESS,LastAccountPtr,u8customerData);
		LastAccountPtr+=4;

		UART_u8SendInt(u8customerData);
		UART_u8SendByte(0x0D);

		UART_u8SendString("\r\n Please Enter the Balance: \r\n");
		UART_u8ReceiveInt(&u8customerData);
		EEPROM_u8WriteIntTo(ATM_EEPROM_ADDRESS,LastAccountPtr,u8customerData);
		LastAccountPtr+=4;
		UART_u8SendInt(u8customerData);
		UART_u8SendByte(0x0D);

		UART_u8SendString("\r\n Enter new Account(y/n) \r\n");
		UART_u8ReceiveByte(&u8UserInput);
	}
	TIMER0_u8PollingDelay(10);
	EEPROM_u8WriteByteTo(ATM_EEPROM_ADDRESS,ATM_EEPROM_PTR,LastAccountPtr);

}

void ATM_AddMaxAmount()
{
	uint32_t u8UserInput;
	uint32_t u32MaxAmount;
	//uint8_t u8Counter=0;
	UART_u8SendString("\r\n Please Enter the Max Amount: \r\n");
	UART_u8ReceiveInt(&u32MaxAmount);
	EEPROM_u8WriteIntTo(ATM_EEPROM_ADDRESS,ATM_MAX_AMOUNT_LOCATION,u32MaxAmount);


	UART_u8SendString("\r\n The new Max Amount is : \r\n");
	EEPROM_u8ReadIntFrom(ATM_EEPROM_ADDRESS,ATM_MAX_AMOUNT_LOCATION,&u8UserInput);
	TIMER0_u8PollingDelay(30);
	EEPROM_u8WriteIntTo(ATM_EEPROM_ADDRESS,ATM_MAX_AMOUNT_LOCATION,u8UserInput);
	UART_u8SendInt(u8UserInput);
}
